GIT 代码协同管理工具
    代码管理工具作用:
        *防止代码丢失，做代码备份
        *支持代码的版本控制，可以设置多个节点，在多个版本间切换
        *方便团队开发，更好的做代码管理
        *方便产品迭代

什么是GIT
    git 是一个开源的分布式版本控制系统，可用于高效的管理大小项目

分布式和集中式
    分布式：每个节点都保存完整代码，没有明确的中央服务器
    节点之间相互推送共享代码

    集中式：代码由中央服务端集中管理，为每个节点分配权限，每个节点
    统一上传到中央服务器，或从服务器下载

git特点：
    *git　可以管理各种文件，特别是代码项目，多在*nix系统使用
    *git　是分布式，不同于svn的集中式，这是git和svn的最大差别
    *git　是开源系统，可以脱网使用，数据传输速度快
    *git　更好的支持分支协作，分布式代码更安全

git 安装
    sudo apt-get install git

git 配置命令
    git config
    配置级别
        1.系统中所有用户都可使用该配置
        命令：git config --system
        配置文件：/etc/gitconfig

        2.当前用户可使用该配置
        命令：git config --global
        配置文件：~/.gitconfig

        3.当前项目可使用该配置，必须在项目录下执行
        命令：git config
        配置文件：project/.git/config

    配置内容
        1.配置用户名
        e.g. 配置用户名为 Tedu
        git config --global user.name Tedu
        cat ~/.gitconfig

        2.配置邮箱
        sudo git config --system user.email lvze@tedu.cn
        cat /etc/gitconfig
    
        3.配置编译器
            git init
            e.g.  编译器配置
            git config core.editor vscode
            cat .git/config
        
        ４.查看项目配置
            git config  --list

git 的基本命令
    1.初始化仓库
    git init
    *在某个目录下初始化仓库后自动产生.git目录.则该目录变为一个git仓库
    在该目录下的所有文件可以使用git管理

    工作区：用于用户对项目文件的各种直接操作，即项目目录操作

    暂存区：用于记录用户对工作取的各种修改，以便同步到本地仓库中

    git仓库：用于存储备份工作区的内容，方便git进行管理

    2.查看分支状态
    git status

    分支：在git仓库中一个独立的工作环境，不影响其他分支操作.git仓库初始默认工作
    分支为master

    3.文件提交到暂存区
    git add [file]

    git add test.py 或　　git add test.py day1.txt 
    git add *  当前文件夹内的所有文件全部提交









